package euler.problem012

import euler.TriangleNumber

/**
 * <p>The sequence of triangle numbers is generated by adding the natural numbers.<br/> 
 * So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. </p>
 * 
 * <p>The first ten terms would be:<br/>
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...</p>
 * 
 * <p>Let us list the factors of the first seven triangle numbers:<br/><br/>
 * <pre>
 *    1: 1
 *    3: 1,3
 *    6: 1,2,3,6
 *   10: 1,2,5,10
 *   15: 1,3,5,15
 *   21: 1,3,7,21
 *   28: 1,2,4,7,14,28
 * </pre>
 * <p>We can see that 28 is the first triangle number to have over five divisors.</p>
 * <p>What is the value of the first triangle number to have over five hundred divisors?</p>
 */
object App {

  var triangle = new TriangleNumber
  
  def main(args: Array[String]) {
    print("The 18th triangle number is " + triangle(18))
  }
  

}
